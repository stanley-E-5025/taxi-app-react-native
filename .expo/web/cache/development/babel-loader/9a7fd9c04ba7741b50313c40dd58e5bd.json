{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _index = _interopRequireDefault(require(\"./src/Nav/index\"));\n\nrequire(\"react-native-gesture-handler\");\n\nvar _geolocation = _interopRequireDefault(require(\"@react-native-community/geolocation\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Stanley\\\\Desktop\\\\AwesomeProject\\\\App.js\";\n\nvar all = function all() {\n  var Permission = function Permission() {\n    var granted;\n    return _regenerator.default.async(function Permission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, {\n              title: \"Cool Photo App Camera Permission\",\n              message: \"Cool Photo App needs access to your camera \" + \"so you can take awesome pictures.\",\n              buttonNeutral: \"Ask Me Later\",\n              buttonNegative: \"Cancel\",\n              buttonPositive: \"OK\"\n            }));\n\n          case 3:\n            granted = _context.sent;\n\n            if (granted === _reactNative.PermissionsAndroid.RESULTS.GRANTED) {\n              console.log(\"You can use the camera\");\n            } else {\n              console.log(\"Camera permission denied\");\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.warn(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  (0, _react.useEffect)(function () {\n    if (_reactNative.Platform.OS == 'android') {\n      Permission();\n    } else {\n        _geolocation.default.requestAuthorization;\n      }\n  }, []);\n  return _react.default.createElement(_index.default, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  });\n};\n\nvar _default = all;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Stanley/Desktop/AwesomeProject/App.js"],"names":["all","Permission","PermissionsAndroid","request","PERMISSIONS","ACCESS_FINE_LOCATION","title","message","buttonNeutral","buttonNegative","buttonPositive","granted","RESULTS","GRANTED","console","log","warn","Platform","OS","Geolocation","requestAuthorization"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACC;;AACA;;AAED;;;;;AAKA,IAAMA,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,MAAOC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEMC,gCAAmBC,OAAnB,CACpBD,gCAAmBE,WAAnB,CAA+BC,oBADX,EAEpB;AACEC,cAAAA,KAAK,EAAE,kCADT;AAEEC,cAAAA,OAAO,EACL,gDACA,mCAJJ;AAKEC,cAAAA,aAAa,EAAE,cALjB;AAMEC,cAAAA,cAAc,EAAE,QANlB;AAOEC,cAAAA,cAAc,EAAE;AAPlB,aAFoB,CAFN;;AAAA;AAEVC,YAAAA,OAFU;;AAchB,gBAAIA,OAAO,KAAKT,gCAAmBU,OAAnB,CAA2BC,OAA3C,EAAoD;AAClDC,cAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,aAFD,MAEO;AACLD,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;;AAlBe;AAAA;;AAAA;AAAA;AAAA;AAoBhBD,YAAAA,OAAO,CAACE,IAAR;;AApBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAwBF,wBAAU,YACV;AACA,QAAIC,sBAASC,EAAT,IAAe,SAAnB,EAA6B;AAC5BjB,MAAAA,UAAU;AAEV,KAHD,MAMK;AACFkB,6BAAYC,oBAAZ;AACF;AAIA,GAdD,EAcG,EAdH;AAgBE,SAEC,6BAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD;AAKD,CA9CD;;eAgDepB,G","sourcesContent":["import React , {useEffect} from 'react';\r\nimport {PermissionsAndroid , Platform} from 'react-native';\r\n import Nav from './src/Nav/index'\r\n import 'react-native-gesture-handler';\r\n\r\nimport Geolocation from '@react-native-community/geolocation';\r\n\r\n\r\n//add rec to next step \r\n \r\nconst all = () => {\r\n  const  Permission = async () => {\r\n    try {\r\n      const granted = await PermissionsAndroid.request(\r\n        PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\r\n        {\r\n          title: \"Cool Photo App Camera Permission\",\r\n          message:\r\n            \"Cool Photo App needs access to your camera \" +\r\n            \"so you can take awesome pictures.\",\r\n          buttonNeutral: \"Ask Me Later\",\r\n          buttonNegative: \"Cancel\",\r\n          buttonPositive: \"OK\"\r\n        }\r\n      );\r\n      if (granted === PermissionsAndroid.RESULTS.GRANTED) {\r\n        console.log(\"You can use the camera\");\r\n      } else {\r\n        console.log(\"Camera permission denied\");\r\n      }\r\n    } catch (err) {\r\n      console.warn(err);\r\n    }\r\n  };\r\n\r\nuseEffect(() =>  \r\n{\r\nif (Platform.OS == 'android'){\r\n Permission();\r\n\r\n}\r\n\r\n// IOS \r\nelse {\r\n   Geolocation.requestAuthorization\r\n}\r\n\r\n\r\n\r\n}, [])\r\n\r\n  return (\r\n      \r\n   <Nav/>\r\n      \r\n  );\r\n}\r\n\r\nexport default all; "]},"metadata":{},"sourceType":"script"}