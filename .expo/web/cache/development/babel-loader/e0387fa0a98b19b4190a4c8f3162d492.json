{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.promiseTimeoutResolveNull = function (ms, promise) {\n  var timeout = new Promise(function (resolve) {\n    var id = setTimeout(function () {\n      clearTimeout(id);\n      resolve(null);\n    }, ms);\n  });\n  return Promise.race([promise, timeout]);\n};","map":{"version":3,"sources":["../src/utils.ts"],"names":[],"mappings":";;;;;;AAMa,OAAA,CAAA,yBAAA,GAA4B,UACvC,EADuC,EAEvC,OAFuC,EAEpB;AAGnB,MAAI,OAAO,GAAG,IAAI,OAAJ,CAAkB,UAAA,OAAA,EAAO;AACrC,QAAI,EAAE,GAAG,UAAU,CAAC,YAAA;AAClB,MAAA,YAAY,CAAC,EAAD,CAAZ;AACA,MAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAHkB,EAGhB,EAHgB,CAAnB;AAID,GALa,CAAd;AAQA,SAAO,OAAO,CAAC,IAAR,CAAa,CAAC,OAAD,EAAU,OAAV,CAAb,CAAP;AACD,CAdY","sourceRoot":"","sourcesContent":["\"use strict\";\n/* eslint-disable valid-jsdoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Wraps a promise with a timeout which resolves to `null` after a given delay.\n * @ignore\n */\nexports.promiseTimeoutResolveNull = function (ms, promise) {\n    // Create a promise that rejects in <ms> milliseconds\n    var timeout = new Promise(function (resolve) {\n        var id = setTimeout(function () {\n            clearTimeout(id);\n            resolve(null);\n        }, ms);\n    });\n    // Returns a race between our timeout and the passed in promise\n    return Promise.race([promise, timeout]);\n};\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}